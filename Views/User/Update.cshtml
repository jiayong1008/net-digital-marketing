@model UpdateUserModel
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "UPDATE USER";
}

<section class="user-update-page min-vh-100 m-auto py-5 pt-10vh col-white w-80">
    <div class="container pt-5">

<h1 class="text-white">Edit Details</h1>
<br />
@if (User.IsInRole("Admin"))
{
    <a asp-action="Index" class="btn btn-secondary">Back</a>
}
else
{
    <a asp-action="Details" asp-route-id="@UserManager.GetUserId(User)" class="btn btn-secondary">Back</a>      
}
<div asp-validation-summary="All" class="text-danger"></div>

<form asp-action="Update" method="post">

    <input type="hidden" asp-for="Id" />
    <input type="hidden" asp-for="Name" />

    <div class="form-group">
        <br />
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" disabled />
    </div>
    <div class="form-group">
        <br />
        <label asp-for="Email"></label>
        <input asp-for="Email" class="form-control" />
    </div>
    <div class="form-group">
        <br />
        <label asp-for="Gender"></label>
        <select asp-for="Gender" class="form-control" asp-items="@new SelectList(Enum.GetNames(typeof(Gender)))">
            <option disabled value="Select">Select Gender</option>
        </select>
    </div>
    <!-- Password input -->
    <div class="form-group">
        <br />
        <label asp-for="Password" class="form-label"></label>
        <input asp-for="Password" class="form-control" />
    </div>

    <!-- Password Confirmation input -->
    <div class="form-group">
        <br />
        <label asp-for="PasswordConfirmation" class="form-label"></label>
        <input asp-for="PasswordConfirmation" class="form-control" />
        <span asp-validation-for="PasswordConfirmation" class="text-danger"></span>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Save</button>
</form>

    </div>
</section>